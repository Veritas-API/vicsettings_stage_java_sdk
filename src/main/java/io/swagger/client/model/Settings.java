/*
 * Veritas Information Classifier (VIC)
 * APIs
 *
 * OpenAPI spec version: Resource Specific
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Settings
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-04-12T23:38:16.514Z")
public class Settings {
  @SerializedName("adminPort")
  private Integer adminPort = null;

  @SerializedName("policyManagementEnabled")
  private Boolean policyManagementEnabled = null;

  @SerializedName("classificationEnabled")
  private Boolean classificationEnabled = null;

  @SerializedName("maxClassifyDocumentSizeBytes")
  private Long maxClassifyDocumentSizeBytes = null;

  @SerializedName("maxConcurrentClassifyRequests")
  private Integer maxConcurrentClassifyRequests = null;

  public Settings adminPort(Integer adminPort) {
    this.adminPort = adminPort;
    return this;
  }

   /**
   * Get adminPort
   * @return adminPort
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getAdminPort() {
    return adminPort;
  }

  public void setAdminPort(Integer adminPort) {
    this.adminPort = adminPort;
  }

  public Settings policyManagementEnabled(Boolean policyManagementEnabled) {
    this.policyManagementEnabled = policyManagementEnabled;
    return this;
  }

   /**
   * True if this VIC instance supports policy management operations.
   * @return policyManagementEnabled
  **/
  @ApiModelProperty(example = "null", value = "True if this VIC instance supports policy management operations.")
  public Boolean getPolicyManagementEnabled() {
    return policyManagementEnabled;
  }

  public void setPolicyManagementEnabled(Boolean policyManagementEnabled) {
    this.policyManagementEnabled = policyManagementEnabled;
  }

  public Settings classificationEnabled(Boolean classificationEnabled) {
    this.classificationEnabled = classificationEnabled;
    return this;
  }

   /**
   * True if this VIC instance supports document classification operations.
   * @return classificationEnabled
  **/
  @ApiModelProperty(example = "null", value = "True if this VIC instance supports document classification operations.")
  public Boolean getClassificationEnabled() {
    return classificationEnabled;
  }

  public void setClassificationEnabled(Boolean classificationEnabled) {
    this.classificationEnabled = classificationEnabled;
  }

  public Settings maxClassifyDocumentSizeBytes(Long maxClassifyDocumentSizeBytes) {
    this.maxClassifyDocumentSizeBytes = maxClassifyDocumentSizeBytes;
    return this;
  }

   /**
   * Maximum size of document that can be classified.
   * @return maxClassifyDocumentSizeBytes
  **/
  @ApiModelProperty(example = "null", value = "Maximum size of document that can be classified.")
  public Long getMaxClassifyDocumentSizeBytes() {
    return maxClassifyDocumentSizeBytes;
  }

  public void setMaxClassifyDocumentSizeBytes(Long maxClassifyDocumentSizeBytes) {
    this.maxClassifyDocumentSizeBytes = maxClassifyDocumentSizeBytes;
  }

  public Settings maxConcurrentClassifyRequests(Integer maxConcurrentClassifyRequests) {
    this.maxConcurrentClassifyRequests = maxConcurrentClassifyRequests;
    return this;
  }

   /**
   * Maximum number of classification operations that the service will process concurrently.
   * @return maxConcurrentClassifyRequests
  **/
  @ApiModelProperty(example = "null", value = "Maximum number of classification operations that the service will process concurrently.")
  public Integer getMaxConcurrentClassifyRequests() {
    return maxConcurrentClassifyRequests;
  }

  public void setMaxConcurrentClassifyRequests(Integer maxConcurrentClassifyRequests) {
    this.maxConcurrentClassifyRequests = maxConcurrentClassifyRequests;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Settings settings = (Settings) o;
    return Objects.equals(this.adminPort, settings.adminPort) &&
        Objects.equals(this.policyManagementEnabled, settings.policyManagementEnabled) &&
        Objects.equals(this.classificationEnabled, settings.classificationEnabled) &&
        Objects.equals(this.maxClassifyDocumentSizeBytes, settings.maxClassifyDocumentSizeBytes) &&
        Objects.equals(this.maxConcurrentClassifyRequests, settings.maxConcurrentClassifyRequests);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adminPort, policyManagementEnabled, classificationEnabled, maxClassifyDocumentSizeBytes, maxConcurrentClassifyRequests);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Settings {\n");
    
    sb.append("    adminPort: ").append(toIndentedString(adminPort)).append("\n");
    sb.append("    policyManagementEnabled: ").append(toIndentedString(policyManagementEnabled)).append("\n");
    sb.append("    classificationEnabled: ").append(toIndentedString(classificationEnabled)).append("\n");
    sb.append("    maxClassifyDocumentSizeBytes: ").append(toIndentedString(maxClassifyDocumentSizeBytes)).append("\n");
    sb.append("    maxConcurrentClassifyRequests: ").append(toIndentedString(maxConcurrentClassifyRequests)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

